# this shell script is mostly SQL queries to generate flat files
# suitable for creating KBaseSearch.Genome ws objects
# not sure whether the output files need to be sorted (mysql sort is often slow)

# ultimately it might be good to convert this to a python script
# but for now it should be sufficient

# prerequisite: set up ./my.cnf with proper creds in current
# working directory

# all SQL queries relatively short (< 5m) unless noted

# define for debugging purposes
# or call script like
# limit= ' LIMIT 50000 ' bash dumpFeatureTables
#limit=' LIMIT 50000 '

echo Genome
time mysql --defaults-extra-file=./my.cnf -e \
 " SELECT g.id,g.complete,g.contigs,g.dna_size,g.gc_content,g.genetic_code,g.pegs,g.rnas,g.domain,g.md5,g.scientific_name,g.source_id,ito.from_link FROM Genome g left join IsTaxonomyOf ito on (g.id=ito.to_link) $limit " \
  | perl -pi -e 's/"//g' > Genome.tab

echo TaxonomicGrouping
time mysql --defaults-extra-file=./my.cnf -e \
 " select tg.id,tg.scientific_name,igf.from_link,tg.hidden,tg.domain,tg.type from IsGroupFor igf join TaxonomicGrouping tg on (tg.id=igf.to_link) $limit " \
  | perl -pi -e 's/"//g' > TaxonomicGrouping.tab

# this gets metadata about contig sequences, not actual DNA sequence
# ~4min
echo ContigSequence
time mysql --defaults-extra-file=./my.cnf -e \
 " select ico.from_link,ico.to_link,cs.id,cs.length from IsComposedOf ico join IsSequenceOf iso on (ico.to_link = iso.to_link) join ContigSequence cs on (iso.from_link=cs.id) $limit " \
  | perl -pi -e 's/"//g' > ContigSequence.tab

#echo not getting dna sequences
# query for contig dna seqs:
# select iso.to_link,ico.from_link,hs.to_link,cc.sequence from IsComposedOf ico join IsSequenceOf iso ON (ico.to_link=iso.to_link) join HasSection hs ON (iso.from_link=hs.from_link) join ContigChunk cc ON (hs.to_link=cc.id) limit 5;
# would need to sort by the hs.to_link column, and decode the sequence column 

# not sure we need to sort now
#echo sorting files
#for file in *.tab
#do
#  echo sorting $file
#  sort -n -k2 -t '.' -T ./tmp -S 48G $file > $file.sorted
#done


# now can open .sorted files and stream through them
# use csFlatFiles_to_ws.py script
